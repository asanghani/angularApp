<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
<fullyQualifiedTypeName name="java.security.SecureRandom"/>
<fullyQualifiedTypeName name="java.lang.StringBuilder"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="com.delta.charter.domain.User"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="com.delta.charter.service.UserSecurityService"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="org.springframework.boot.CommandLineRunner"/>
<fullyQualifiedTypeName name="com.delta.charter.repository.RoleRepository"/>
<fullyQualifiedTypeName name="com.delta.charter.domain.Role"/>
<fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="com.delta.charter.service.RoleService"/>
<fullyQualifiedTypeName name="scala.annotation.implicitNotFound"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
<fullyQualifiedTypeName name="org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession"/>
<fullyQualifiedTypeName name="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.session.web.http.HttpSessionStrategy"/>
<fullyQualifiedTypeName name="org.springframework.session.web.http.HeaderHttpSessionStrategy"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="org.springframework.core.Ordered"/>
<fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
<fullyQualifiedTypeName name="javax.servlet.Filter"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpSession"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="com.delta.charter.service.UserService"/>
<fullyQualifiedTypeName name="javax.sql.DataSource"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
</qualifiedTypeNameHistroy>
